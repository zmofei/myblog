include ../../../system/config/config.jade

doctype html
html
  head
    meta(content="text/html" charset="UTF-8")
    meta(name="description" content="一个轻量级，基于文件系统的node.js web server框架")
    meta(name="author" content="朱文龙")
    meta(name="author" content="Z.Mofei")
    meta(name="keywords" content="朱文龙,Z.Mofei,Mofei,node.js,web server,框架")
    title mSite,快速搭建node.js网站
    link(rel="stylesheet" href= host + "/css/lab/mstaticize.css")
    script(async src="https://www.googletagmanager.com/gtag/js?id=UA-109405512-1")
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-109405512-1');
  body
    div.github
      a(href="https://github.com/zmofei/mSite")
        img(style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/652c5b9acfaddf3a9c326fa6bde407b87f7be0f4/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png")
    header
        span.logo
            img(src= host + "/image/lab/mstaticize/mStaticize.png")
        span.intro
            h1 mStaticize
            h2 一个简单易用的前端发布工具 easy&&simple
    .infoBar
        p ☺ 使用 mStaticize 通过简单的配置，就可以实现前端资源的静态化（hash），自动替换资源引用等实用的前端文件打包功能。
        pre.beforeDeal
            | <span class="comment">//代码处理前（开发环境）</span>
            | |-- index.php <span class="comment">↓</span>
            | |       <span class="codegrey">&gt  &lt link href="css/index.css"&gt</span>
            | |       <span class="codegrey">&gt  &lt script src="js/index.js"&gt</span>
            | |-- css
            | |    |-- index.css <span class="comment">↓</span>
            | |    |     <span class="codegrey">&gt  .logo{background:url('/img/a.png')}</span>
            | |-- js
            | |    |-- index.js 
            | |-- img
            |      |-- a.png
            |      |-- b.png

        pre.afterDeal
            | <span class="comment">//代码处理后（上线文件）</span>
            | |-- online20140530
            | |        <span class="comment">//静态资源hash化处理，自动替换对静态资源的引用</span>
            | |        |-- index.php <span class="comment">↓</span>
            | |        |       <span class="codegrey">&gt  &lt link href="css/index.<span class="spec">3ad125df.</span>css"&gt</span>
            | |        |       <span class="codegrey">&gt  &lt script src="js/index.<span class="spec">ft3e5g72.</span>js"&gt</span>
            | |        |-- css
            | |        |    |-- index.<span class="spec">3ad125df.</span>css <span class="comment">↓</span>
            | |        |    |     <span class="codegrey">&gt  .logo{background:url('/img/a.<span class="spec">f1d3da2d.</span>png')}</span>
            | |        |-- js
            | |        |    |-- index.<span class="spec">ft3e5g72.</span>js 
            | |        |-- img
            | |             |-- a.<span class="spec">f1d3da2d.</span>png
            | |             |-- b.<span class="spec">ld3gs12a.</span>png
            | <span class="codegrey">|   //开发环境的文件不受影响
            | |-- index.php
            | |-- css (**/*.*)
            | |-- js (**/*.*)
            | |-- img (**/*.*)
            | </span>
    .api
        .api_tables
            span Grunt
        .api_contant
            h3 grunt-staticize
            p 写这个工具之前，参考了业界用的比较多的 grunt-filerev 以及 grunt-usemin , 他们在前端代码的打包和自动化上作出了巨大的贡献。
            p 为了更好的整合这些工具，简化这个过程，才有了现在看到的 mStaticize ，暂时只提供 Grunt 版本，后续根据实际情况，可能会发布独立的版本工具。
            h3 安装
            p 该插件需要依赖 Grunt ~0.4.5 如果没有接触过 <a href="http://gruntjs.com/" target="_blank">Grunt</a> ，请确保参考 Grunt 的<a href="http://gruntjs.com/getting-started" target="_blank">官方向导</a>，以了解如何建立 Grunt 项目，以及如何建立 <a href="http://gruntjs.com/sample-gruntfile" target="_blank"> Gruntfile </a>开始一个 Grunt 项目。
            p 你可以通过下面的命令安装插件：
            pre
                code npm install grunt-staticize --save-dev
            p 插件完成之后就可以通过下面的方式，在 Gruntfile 中引入该插件：
            pre
                code grunt.loadNpmTasks('grunt-staticize');

            h3 staticize 用法

            h4 概述
            p 在项目的 Gruntfile 中，通过在 grunt.initConfig() 中添加 staticize 段落来执行 staticize ：
            pre
                code
                    |  grunt.initConfig({
                    |    staticize: {
                    |      targetName:{
                    |        rev:{  //校订任务（hash）
                    |          msite:{ //任务名称
                    |            'files': ['temp/msite/**/*.{css,js,jpg,png,gif}'],
                    |            'dest': 'testF_2'
                    |          },
                    |          options: {  //任务配置
                    |            'encoding': 'utf8',
                    |            'algorithm': 'md5',
                    |            'length': 8
                    |          }
                    |        },
                    |        rep: {  //替换任务
                    |          msite: {  //替换任务名称
                    |            'files': ['temp/msite/*.{css,js,jade}'],
                    |            'assetsDirs': 'temp/msite/static/',
                    |            'patterns': /\/{0,1}\w+(\/\w+)*\.\w+/mg
                    |          }
                    |        }
                    |      }
                    |    },
                    |  });
            h4 Revisioning task 校订任务（hash）
            p 校订任务主要给静态文件添加hash版本号，例如 "/static/logo.jpg" -> "/static/logo.d124da.jpg"
            p 校订任务通过 "rev" 字段来定义，"rev" 为json字段，包含一个或者多个子任务（target），以及一个选填的配置（option）
            pre
                code
                    |  //...
                    |    rev:{
                    |      targetA:{
                    |        //...
                    |      }
                    |      targetB:{
                    |        //...
                    |      }
                    |      option:{
                    |        //...
                    |      }
                    |    }
                    |  //...
            h5 target 任务
            p 在每个任务中，需要指定 "files" 字段（你需要处理的文件） 以及 "dest" 字段（处理后的文件的存放目录）
            p "dest" 可选，如果指定了，将会在自定的目录存放处理好的文件，原始文件任然保留。如果未指定，将会在已有的文件上直接进行覆盖处理。
            h5 options [optional] 配置（选填）
            h6 options.encoding [optional]
            p 类型: "String", 缺省值: "utf8"
            p 文件的编码，默认为“utf8”
            h6 options.algorithm [optional]
            p 类型: "String", 缺省值: "md5"
            p hash 方式，默认为“md5”
            h6 options.length [optional]
            p 类型: "Number", 缺省值: 8
            p hash长度，默认为8
            h5 例子
            pre
                code
                    |  grunt.initConfig({
                    |    staticize: {
                    |      targetName:{
                    |        rev:{  //revisioning task
                    |          msite:{ //target
                    |            'files': ['temp/msite/**/*.{css,js,jpg,png,gif}'],
                    |            'dest': 'testF_2'
                    |          },
                    |          options: {  //revisioning options
                    |            'encoding': 'utf8',
                    |            'algorithm': 'md5',
                    |            'length': 8
                    |          }
                    |        }
                    |      }
                    |    },
                    |  });

            h4 Replace task 替换任务
            p 替换任务主要是查找并替换所有的静态资源的hash引用
            p 当执行完成 校订任务（hash）之后，例如 “/static/logo.jpg” -> “/static/logo.d124da.jpg”，相对于其他引用该文件的引用地址就应该进行智能匹配和替换。例如我们有下面的两个 index.css 和 index.html 文件：
            pre
                code
                    |  /* index.css */
                    |  /* ... */
                    |  .logo{
                    |       background:url('/static/logo.jpg');
                    |  }
                    |  /* ... */
            pre
                code
                    |  &lt;!--  index.html  --&gt;
                    |  &lt;!--  ... --&gt;
                    |  &lt;img src="/static/logo.jpg"&gt;
                    |  &lt;!--  ... --&gt;
            p 在进行过替换任务之后，所有对logo.jpg的引用都会被替换，他们会变成：
            pre
                code
                    |  /* index.css */
                    |  /* ... */
                    |  .logo{
                    |       background:url('/static/logo.d124da.jpg');
                    |  }
                    |  /* ... */
            pre
                code
                    |  &lt;!--  index.html  --&gt;
                    |  &lt;!--  ... --&gt;
                    |  &lt;img src="/static/logo.d124da.jpg"&gt;
                    |  &lt;!--  ... --&gt;
            p 替换任务通过字段 "rep" 进行标识
            p "rep" 是一个json类型的字符串，包含若干个子任务
            pre
                code
                    |  //...
                    |    rep:{
                    |      targetA: { },
                    |      targetB: { }
                    |    }
                    |  //...
            h5 target
            p 在每个任务中，需要指定下面的几个字段：
            h6 files
            p 类型: "String", 必填
            p 需要进行替换的文件，通常是 css,js 以及引用这些 css 和 js 的文件
            h6 assetsDirs
            p 类型: "String", 必填
            p 资源所在目录
            h6 patterns
            p 类型: "RgeExp",必填
            p 需要替换资源选择器
            h5 例子
            pre
                code
                    |  grunt.initConfig({
                    |    staticize: {
                    |      rep: {  //replace task 任务标识
                    |        msite: {  //子任务
                    |          'files': ['temp/msite/*.{css,js,jade}'],  //需要替换的文件
                    |          'assetsDirs': 'temp/msite/static/',  //文件中引用的静态文件所在的相对根目录
                    |          'patterns': /\/{0,1}\w+(\/\w+)*\.\w+/mg  
                    |           //匹配字符，这里匹配类似 'ad/ad.jpg','dfa/d.css' 的字符，尝试在assetsDirs中寻找是否有匹配的值，有的话进行匹配
                    |        }
                    |      }
                    |    },
                    |  });
            h3 感谢
            p 最后感谢大家的喜爱，也希望大家能对 mStaticize 提出宝贵意见！
            h3 关于项目
            p GitHub <a href="https://github.com/zmofei/grunt-staticize" target="_blank">https://github.com/zmofei/grunt-staticize</a>
            p 问题提交 <a href="https://github.com/zmofei/grunt-staticize/issues" target="_blank">https://github.com/zmofei/grunt-staticize/issues</a>
            p 关于作者 <a href="https://www.zhuwenlong.com" target="_blank">https://www.zhuwenlong.com</a>

    footer ^_^   Powered By <a href="https://www.zhuwenlong.com" target="_blank"> zhuwenlong.com</a>
    script.
      var uid = localStorage.getItem('username');
      if(uid){
        uid += '-' + localStorage.getItem('email');
        uid += '-' + localStorage.getItem('website');
        gtag('set', {'user_id': uid});
      }
      //
      var _hmt = _hmt || [];
      (function() {
      var hm = document.createElement("script");
      hm.src = "https://hm.baidu.com/hm.js?f4c53dc35cc4e26ed5f032c0d546a6a0";
      var s = document.getElementsByTagName("script")[0]; 
      s.parentNode.insertBefore(hm, s);
      })();